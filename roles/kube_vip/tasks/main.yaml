---
- name: Ensure /etc/rancher/k3s/config.yaml exists (masters only)
  when: "'masters' in group_names"
  tags: [kube_vip]
  file:
    path: /etc/rancher/k3s/config.yaml
    state: touch

- name: Ensure tls-san header present (masters only)
  when: "'masters' in group_names"
  tags: [kube_vip]
  lineinfile:
    path: /etc/rancher/k3s/config.yaml
    regexp: '^tls-san:'
    line: 'tls-san:'
    insertafter: EOF

- name: Add VIP to tls-san list (masters only)
  when: "'masters' in group_names"
  tags: [kube_vip]
  lineinfile:
    path: /etc/rancher/k3s/config.yaml
    regexp: '^\s*-\s*{{ kube_vip_ip | regex_escape() }}\s*$'
    insertafter: '^tls-san:'
    line: "  - {{ kube_vip_ip }}"
  register: vip_san
  notify: restart k3s

- name: Apply kube-vip RBAC (ServiceAccount/ClusterRole/Binding)
  run_once: true
  tags: [kube_vip]
  command: kubectl apply -f https://kube-vip.io/manifests/rbac.yaml
  changed_when: false

- name: Write kube-vip DaemonSet manifest (masters only)
  when: "'masters' in group_names"
  tags: [kube_vip]
  copy:
    dest: /tmp/kube-vip-ds.yaml
    mode: "0644"
    content: |
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: kube-vip-ds
        namespace: kube-system
      spec:
        selector:
          matchLabels: { app.kubernetes.io/name: kube-vip }
        template:
          metadata:
            labels: { app.kubernetes.io/name: kube-vip }
          spec:
            hostNetwork: true
            serviceAccountName: kube-vip
            tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "node-role.kubernetes.io/master"
              operator: "Exists"
              effect: "NoSchedule"
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
                  - matchExpressions:
                    - key: node-role.kubernetes.io/master
                      operator: Exists
            containers:
            - name: kube-vip
              image: ghcr.io/kube-vip/kube-vip:v0.7.2
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities:
                  add: ["NET_ADMIN","NET_RAW","SYS_TIME"]
              args: ["manager"]
              env:
              # VIP basics
              - name: address
                value: "{{ kube_vip_ip }}"
              - name: vip_interface
                value: "{{ kube_vip_iface }}"
              - name: port
                value: "6443"
              - name: vip_arp
                value: "true"
              - name: vip_leaderelection
                value: "true"
              # Enable control-plane feature
              - name: cp_enable
                value: "true"
              - name: cp_namespace
                value: "kube-system"
              # We are not using Service LB here
              - name: svc_enable
                value: "false"

- name: Apply kube-vip DaemonSet
  tags: [kube_vip]
  command: kubectl -n kube-system apply -f /tmp/kube-vip-ds.yaml
  changed_when: false