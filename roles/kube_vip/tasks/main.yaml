---
# 1) Ensure VIP is in TLS SANs so API cert matches the VIP
- name: Ensure /etc/rancher/k3s/config.yaml exists (masters only)
  when: "'masters' in group_names"
  file:
    path: /etc/rancher/k3s/config.yaml
    state: touch

- name: Ensure tls-san header present (masters only)
  when: "'masters' in group_names"
  lineinfile:
    path: /etc/rancher/k3s/config.yaml
    regexp: '^tls-san:'
    line: 'tls-san:'
    insertafter: EOF

- name: Add VIP to tls-san list (masters only)
  when: "'masters' in group_names"
  lineinfile:
    path: /etc/rancher/k3s/config.yaml
    regexp: '^\s*-\s*{{ kube_vip_ip | regex_escape() }}\s*$'
    insertafter: '^tls-san:'
    line: "  - {{ kube_vip_ip }}"
  notify: restart k3s

# 2) Apply kube-vip RBAC once
- name: Apply kube-vip RBAC
  run_once: true
  command: kubectl apply -f https://kube-vip.io/manifests/rbac.yaml
  changed_when: false

# 3) Deploy the simplest kube-vip DaemonSet (masters only)
- name: Deploy kube-vip DaemonSet
  when: "'masters' in group_names"
  copy:
    dest: /tmp/kube-vip-ds.yaml
    content: |
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: kube-vip-ds
        namespace: kube-system
      spec:
        selector:
          matchLabels: { app.kubernetes.io/name: kube-vip }
        template:
          metadata:
            labels: { app.kubernetes.io/name: kube-vip }
          spec:
            hostNetwork: true
            tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "node-role.kubernetes.io/master"
              operator: "Exists"
              effect: "NoSchedule"
            nodeSelector:
              node-role.kubernetes.io/control-plane: "true"
            containers:
            - name: kube-vip
              image: ghcr.io/kube-vip/kube-vip:v0.7.2
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities:
                  add: ["NET_ADMIN","NET_RAW","SYS_TIME"]
              env:
              - name: address
                value: "{{ kube_vip_ip }}"
              - name: port
                value: "6443"
              - name: vip_interface
                value: "{{ kube_vip_iface }}"
              - name: vip_arp
                value: "true"
              - name: vip_leaderelection
                value: "true"
              - name: lb_enable
                value: "false"
              args: ["manager"]

- name: Apply kube-vip manifest
  command: kubectl -n kube-system apply -f /tmp/kube-vip-ds.yaml
  changed_when: false
